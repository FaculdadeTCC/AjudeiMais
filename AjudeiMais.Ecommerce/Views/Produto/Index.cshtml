@model AjudeiMais.Ecommerce.Models.Produto.ProdutoIndex
@using AjudeiMais.Ecommerce.Tools
@{
	ViewData["Title"] = "Meus Anúncios";
}

@section Styles {
	<link rel="stylesheet" href="~/css/produto/produto.css" asp-append-version="true" />
}

@{
	// This partial view should contain your alert/notification display logic
	await Html.RenderPartialAsync("_Alertas");
}

<section class="container-fluid dashboard-container mt-5">
	@* Adicionado a classe dashboard-container *@
	<div id="modalEditCategoryContainer">
	</div>
	<div class="header-section">
		@* Atualizado para header-section *@
		<h2 class="h5 mb-0">
			Meus Anúncios Publicados
		</h2>
		<a asp-action="Cadastro" asp-controller="Produto" class="btn btn-outline-light">
			@* Usando o botão de categorias *@
			<i class="fas fa-plus-circle me-2"></i> Publicar Novo Anúncio
		</a>
	</div>

	<form onsubmit="return false;">
		<div class="input-group shadow-sm">
			<span class="input-group-text" id="search-addon">
				<i class="fas fa-search text-gray-600"></i>
			</span>
			<input type="text" id="customSearchInput" class="form-control border-start-0" placeholder="Buscar anúncios..." aria-label="Buscar anúncios" aria-describedby="search-addon" />
		</div>
	</form>

	<div class="table-section table-responsive">
		@* Atualizado para table-section *@
		@if (Model.Anuncios != null && Model.Anuncios.Any())
		{
			<table id="productsTable" class="table-hover mb-0 table-striped table align-middle">
				@* Ajustado para table-hover e mb-0 *@
				<thead class="table-light">
					@* Usando table-light para o fundo do cabeçalho da tabela *@
					<tr>
						<th scope="col">Imagem</th>
						<th scope="col">Nome do Item</th>
						<th scope="col">Categoria</th>
						<th scope="col">Quantidade</th>
						<th scope="col">Condição</th>
						<th scope="col">Criado em</th>
						<th scope="col" class="text-center">Ações</th>
					</tr>
				</thead>
				<tbody id="productsTableBody">
					@foreach (var produto in Model.Anuncios)
					{
						<tr data-search-term="@(produto.Nome.ToLower() + " " + produto.Quantidade + " " + produto.Condicao.ToLower())">
							<td>
								<img src="@(produto.ProdutoImagens != null && produto.ProdutoImagens.Any()
										? $"{Assistant.ServerURL()}{produto.ProdutoImagens.FirstOrDefault().Imagem}"
										: "/images/placeholder.jpg")"
									 class="product-image-thumb"
									 alt="Imagem do produto @produto.Nome">
							</td>
							<td>
								<strong>@produto.Nome</strong>
							</td>
							<td>@produto.CategoriaProduto_ID</td>
							<td>@produto.Quantidade @produto.UnidadeMedida</td>
							<td>
								@produto.Condicao
								@produto.Guid
							</td>
							<td>
								<p class="mb-0">Cad.: @produto.DataCriacao.Value.ToString("dd/MM/yyyy HH:mm")</p>
								@if (produto.DataUpdate != DateTime.MinValue)
								{
									<small class="text-muted">Atual.: @produto.DataUpdate.Value.ToString("dd/MM/yyyy HH:mm")</small>
								}
							</td>
							<td class="text-center">
								<a href="@Url.RouteUrl("anuncio-editar", new { guid = produto.Guid })" class="btn btn-sm btn-primary edit-product-btn" title="Editar">
									<i class="fa fa-pencil"></i>
								</a>
								<button type="button" class="btn btn-sm btn-danger delete-product-btn"
										data-bs-toggle="modal" data-bs-target="#confirmDeleteModal"
										data-guid="@produto.Guid.ToString()" title="Excluir">
									<i class="fa fa-trash"></i>
								</button>	
							</td>
						</tr>
					}
				</tbody>
			</table>
		}
		else
		{
			<div class="no-products-message">
				<i class="fas fa-box-open icon"></i>
				<p>Parece que você ainda não tem nenhum anúncio publicado. Vamos começar a ajudar quem mais precisa e fazer a diferença?</p>
				<a asp-action="Cadastro" asp-controller="Produto" class="btn-primary-custom mt-4">
					<i class="fas fa-plus-circle"></i> Publicar Meu Primeiro Anúncio
				</a>
			</div>
		}
	</div>

	<div class="mt-2 text-center">
		<span id="paginationSummary" class="text-muted" style="font-family: var(--font-family-base);"></span>
	</div>

	<div class="mt-4 d-flex justify-content-center">
		<nav aria-label="Paginação de Anúncios">
			<ul class="pagination" id="paginationControls">
			</ul>
		</nav>
	</div>

</section>


@await Html.PartialAsync("_DeletarProduto")


@section Scripts {
	<script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRzSmL/C5LpTfGvR8Qy/n5/A2o+6t3/o7E=" crossorigin="anonymous"></script>

	<script>
		$(document).ready(function () {
			const rowsPerPage = 10;
			let currentPage = 1;
			const $tableBody = $('#productsTableBody');
			const $paginationControls = $('#paginationControls');
			const $paginationSummary = $('#paginationSummary');
			let $allRows = $tableBody.find('tr');

			function displayRows(rows, page) {
				const start = (page - 1) * rowsPerPage;
				const end = start + rowsPerPage;
				$tableBody.find('tr').hide();
				rows.slice(start, end).show();
			}

			function setupPagination(filteredRows) {
				const totalPages = Math.ceil(filteredRows.length / rowsPerPage);
				$paginationControls.empty();

				if (totalPages > 1) {
					$paginationControls.append(`<li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
						<a class="page-link" href="#" data-page="${currentPage - 1}" aria-label="Previous">
							<span aria-hidden="true">&laquo;</span>
						</a>
					</li>`);

					for (let i = 1; i <= totalPages; i++) {
						$paginationControls.append(`<li class="page-item ${i === currentPage ? 'active' : ''}">
							<a class="page-link" href="#" data-page="${i}">${i}</a>
						</li>`);
					}

					$paginationControls.append(`<li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
						<a class="page-link" href="#" data-page="${currentPage + 1}" aria-label="Next">
							<span aria-hidden="true">&raquo;</span>
						</a>
					</li>`);
				}

				const startItem = (currentPage - 1) * rowsPerPage + 1;
				const endItem = Math.min(currentPage * rowsPerPage, filteredRows.length);
				$paginationSummary.text(`Mostrando ${startItem}-${endItem} de ${filteredRows.length} anúncios`);
			}

			function filterAndPaginate() {
				const searchTerm = $('#customSearchInput').val().toLowerCase();
				let filteredRows = $allRows.filter(function () {
					const rowText = $(this).data('search-term');
					return rowText.includes(searchTerm);
				});

				if (searchTerm === '') {
					filteredRows = $allRows;
				}

				currentPage = 1;
				displayRows(filteredRows, currentPage);
				setupPagination(filteredRows);

				if (filteredRows.length === 0 && searchTerm !== '') {
					$('.no-products-message').show().html('<i class="fas fa-search-minus icon"></i><p>Nenhum anúncio corresponde à sua busca. Tente outro termo!</p>');
					$('.card.rounded-xl').hide();
					$('.pagination, #paginationSummary').hide(); // Esconde a paginação se não houver resultados da busca
				} else if ($allRows.length === 0) {
					$('.no-products-message').show();
					$('.card.rounded-xl').hide();
					$('.pagination, #paginationSummary').hide(); // Esconde a paginação se não houver produtos inicialmente
				} else {
					$('.no-products-message').hide();
					$('.card.rounded-xl').show();
					$('.pagination, #paginationSummary').show(); // Mostra a paginação se houver resultados
				}
			}

			$paginationControls.on('click', '.page-link', function (e) {
				e.preventDefault();
				const newPage = parseInt($(this).data('page'));
				const searchTerm = $('#customSearchInput').val().toLowerCase();
				let filteredRows = $allRows.filter(function () {
					const rowText = $(this).data('search-term');
					return rowText.includes(searchTerm);
				});
				if (searchTerm === '') {
					filteredRows = $allRows;
				}

				const totalPages = Math.ceil(filteredRows.length / rowsPerPage);

				if (newPage > 0 && newPage <= totalPages) {
					currentPage = newPage;
					displayRows(filteredRows, currentPage);
					setupPagination(filteredRows);
				}
			});

			$('#customSearchInput').on('keyup', function () {
				filterAndPaginate();
			});

			// Chamada inicial para exibir a primeira página e configurar a paginação
			if ($allRows.length > 0) {
				filterAndPaginate();
			} else {
				$('.card.rounded-xl').hide();
				$('.no-products-message').show();
				$('.pagination, #paginationSummary').hide(); // Esconde a paginação se não houver produtos inicialmente
			}
		});
	</script>

}