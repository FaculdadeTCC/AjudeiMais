@model AjudeiMais.Ecommerce.Models.Produto.ProdutoEditarModel
@using AjudeiMais.Ecommerce.Tools

@{
    ViewData["Title"] = Model.Nome;
    var userGuidLogado = Model.Usuario?.GUID ?? "";
}

@section Styles {
    <link rel="stylesheet" href="~/css/produto/produto-detalhe.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@@fancyapps/ui@5.0/dist/fancybox/fancybox.css" />
}

<section class="product-display-card">
    <h1>
        Nome do Produto: <span class="product-title-accent">@Model.Nome</span>
    </h1>

    <div class="product-content-grid">
        <div class="product-carousel-container">
            <div id="splide" class="splide">
                <div class="splide__track">
                    <ul class="splide__list">
                        @{
                            // Get all valid images, prioritizing the main image if it exists
                            var todasImagensValidas = Model.ProdutoImagens?
                            .Where(pi => pi.Excluido != true)
                            .OrderByDescending(pi => pi.IsPrincipal) // Ensures main image is first if it exists
                            .ToList() ?? new List<AjudeiMais.Ecommerce.Models.Produto.ProdutoImagemModel>();
                        }

                        @if (todasImagensValidas.Any())
                        {
                            @foreach (var imagem in todasImagensValidas)
                            {
                                <li class="splide__slide">
                                    <a data-fancybox="gallery" href="@(Assistant.ServerURL() + imagem.Imagem)">
                                        <img src="@(Assistant.ServerURL() + imagem.Imagem)" alt="@Model.Nome" loading="lazy" />
                                    </a>
                                </li>
                            }
                        }
                        else
                        {
                            <li class="splide__slide">
                                <a data-fancybox="gallery" href="https://via.placeholder.com/1200x800?text=Sem+Imagem">
                                    <img src="https://via.placeholder.com/600x400?text=Sem+Imagem" alt="Sem Imagem" />
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>

        <div class="product-info-container">
            <div class="space-y-4">
                <div>
                    <span class="font-semibold">Descrição:</span>
                    <p class="mt-1 text-gray-600 text-sm">@Html.Raw(Model.Descricao)</p>
                </div>

                <div>
                    <span class="font-semibold">Condição:</span>
                    <p class="mt-1">@Model.Condicao</p>
                </div>

                @if (!string.IsNullOrEmpty(Model.Validade?.ToString("dd/MM/yyyy")))
                {
                    <div>
                        <span class="font-semibold">Validade:</span>
                        <p class="mt-1">@Model.Validade?.ToString("dd/MM/yyyy")</p>
                    </div>
                }

                <div>
                    <span class="font-semibold">Categoria:</span>
                    <i class="@Model.Categorias.FirstOrDefault(c => c.CategoriaProduto_ID == @Model.CategoriaProduto_ID)?.Icone"></i>
                    <p class="mt-1">@Model.Categorias.FirstOrDefault(c => c.CategoriaProduto_ID == @Model.CategoriaProduto_ID)?.Nome</p>
                </div>
            </div>

            <div class="space-y-4">
                <div>
                    <span class="font-semibold">Quantidade:</span>
                    <p class="mt-1">@Model.Quantidade @Model.UnidadeMedida</p>
                </div>

                @if (Model.Peso > 0)
                {
                    <div>
                        <span class="font-semibold">Peso Total:</span>
                        <p class="mt-1">@Model.Peso kg</p>
                    </div>
                }

                <div>
                    <span class="font-semibold">Status da Doação:</span>
                    <p class="mt-1">
                        @{
                            string statusClass = "";
                            string statusText = "";

                            switch (Model.Disponivel)
                            {
                                case true:
                                    statusClass = "status-badge status-available";
                                    statusText = "Disponível";
                                    break;
                                case false:
                                    statusClass = "status-badge status-reserved";
                                    statusText = "Reservado";
                                    break;
                                default:
                                    statusClass = "status-badge status-unknown";
                                    statusText = "Desconhecido";
                                    break;
                            }
                        }
                        <span class="@statusClass">@statusText</span>
                    </p>
                </div>

                <div>
                    <span class="font-semibold">Doador:</span>
                    <div class="donor-info">
                        <img src="@(string.IsNullOrEmpty(Model.Usuario?.FotoDePerfil)
                                                                                      ? "https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_960_720.png"
                                                                                      : Assistant.ServerURL() + Model.Usuario.FotoDePerfil)" alt="@Model.Usuario?.NomeCompleto" />
                        <div class="donor-details">
                            <a href="@Url.RouteUrl("usuario-perfil", new { guid = Model.Usuario?.GUID })">@Model.Usuario?.NomeCompleto</a>
                            <p class="text-sm">@Model.Usuario?.Cidade - @Model.Usuario?.Estado</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="product-actions">
        <a href="@Url.RouteUrl("anuncios", new { guid = userGuidLogado })" class="button-secondary">
            Voltar para Anúncios
        </a>

        @if (User.IsInRole("instituicao"))
        {
            @using (Html.BeginForm("CriarPedido", "Pedido", FormMethod.Post))
            {
                @Html.HiddenFor(model => model.Produto_ID)
                @Html.Hidden("Usuario_GUID", userGuidLogado)
                @Html.Hidden("StatusUsuario", "pendente")
                @Html.Hidden("StatusInstituicao", "pendente")

                <button type="submit" class="button-primary">
                    Solicitar
                </button>
            }
        }
    </div>
</section>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/@@splidejs/splide@4.1.3/dist/js/splide.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@@fancyapps/ui@5.0/dist/fancybox/fancybox.umd.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            new Splide('#splide', {
                type: 'loop',
                perPage: 1,
                autoplay: true,
                interval: 3000,
                arrows: true,
                pagination: true,
            }).mount();

            Fancybox.bind("[data-fancybox='gallery']", {
                Carousel: {
                    Dots: true,
                },
            });
        });
    </script>
}