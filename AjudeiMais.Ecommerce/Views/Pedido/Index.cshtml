@model List<AjudeiMais.Ecommerce.Models.Pedido.GetPedidoModel>

@{
    ViewData["Title"] = "Meus Pedidos"; // Título mais genérico
    var pedidos = Model;
}

@section Styles {
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OerSvMSc+1K8h+pB+F3j/dHtA2wQ+R7j42F+g3XN3u3+" crossorigin="anonymous">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        /* Variáveis CSS para simular as cores e espaçamentos do seu tema,
                   ajuste para corresponder aos seus valores globais se existirem. */
        :root {
            --color-bg: #f8f9fa; /* Light gray background */
            --color-surface: #ffffff; /* White surface for cards */
            --color-primary: #007bff; /* Bootstrap Primary Blue */
            --color-primary-dark: #0056b3; /* Darker Primary */
            --color-secondary: #6c757d; /* Bootstrap Secondary Gray */
            --color-secondary-dark: #5a6268; /* Darker Secondary */
            --color-accent: #28a745; /* Bootstrap Success Green (used for submit) */
            --color-accent-dark: #218838; /* Darker Success Green */
            --color-gray-100: #f8f9fa;
            --color-gray-200: #e9ecef;
            --color-gray-300: #dee2e6;
            --color-gray-400: #ced4da;
            --color-gray-500: #adb5bd;
            --color-gray-600: #6c757d;
            --color-gray-700: #495057;
            --color-gray-800: #343a40;
            --spacing-xxs: 4px;
            --spacing-xs: 8px;
            --spacing-sm: 12px;
            --spacing-md: 16px;
            --spacing-lg: 24px;
            --spacing-xl: 32px;
            --spacing-xxl: 48px;
            --radius-md: 0.25rem; /* Bootstrap default border-radius */
            --radius-lg: 0.5rem; /* Slightly larger radius */

            --shadow-sm: rgba(0, 0, 0, 0.05) 0px 1px 2px 0px;
            --shadow-md: rgba(0, 0, 0, 0.1) 0px 4px 6px -1px, rgba(0, 0, 0, 0.06) 0px 2px 4px -1px;
            --shadow-lg: rgba(0, 0, 0, 0.1) 0px 10px 15px -3px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px;
            --font-family-base: 'Inter', sans-serif;
            --font-family-heading: 'Inter', sans-serif;
            --font-family-accent: 'Inter', sans-serif;
            --font-weight-light: 300;
            --font-weight-normal: 400;
            --font-weight-medium: 500;
            --font-weight-semibold: 600;
            --font-weight-bold: 700;
            --font-size-xs: 0.75rem;
            --font-size-sm: 0.875rem;
            --font-size-md: 1rem;
            --font-size-lg: 1.125rem;
            --font-size-xl: 1.25rem;
            --font-size-xxl: 1.5rem;
            --font-size-3xl: 1.875rem;
        }

        body {
            background-color: var(--color-bg);
            font-family: var(--font-family-base);
        }

        .manage-ad-section {
            max-width: 960px;
            margin-top: var(--spacing-xxl);
            margin-bottom: var(--spacing-xxl);
            background-color: var(--color-surface);
            padding: var(--spacing-xl);
            border-radius: var(--radius-lg);
            box-shadow: var(--shadow-lg);
            border: 1px solid var(--color-gray-200);
        }

            .manage-ad-section h2 {
                font-family: var(--font-family-heading);
                font-weight: var(--font-weight-bold);
                font-size: var(--font-size-3xl);
                color: var(--color-primary-dark);
                margin-bottom: var(--spacing-lg);
                text-align: center;
            }

        /* Estilos para os cards de pedido */
        .order-card {
            cursor: pointer; /* Re-added to indicate clickability */
            transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        }

            .order-card:hover {
                transform: translateY(-3px);
                box-shadow: var(--shadow-md);
            }

        /* Estilos para o status do pedido */
        .status-badge {
            padding: 0.35em 0.8em;
            border-radius: 50rem; /* Pill shape */
            font-size: 0.85em;
            font-weight: var(--font-weight-semibold);
            display: inline-block; /* Ensure padding works well */
        }

        .status-concluido {
            background-color: #d4edda;
            color: #155724;
        }
        /* Bootstrap success light */
        .status-pendente {
            background-color: #fff3cd;
            color: #856404;
        }
        /* Bootstrap warning light */
        .status-cancelado {
            background-color: #f8d7da;
            color: #721c24;
        }
        /* Bootstrap danger light */
    </style>
}

<section class="manage-ad-section container">
    <h2 class="mb-5">Meus Pedidos</h2>

    <div class="mb-4">
        <label for="orderStatusFilter" class="form-label fw-bold">Filtrar por Status:</label>
        <select class="form-select" id="orderStatusFilter">
            <option value="todos">Todos os Pedidos</option>
            <option value="ativo" selected>Ativos</option>
            <option value="pendente">Pendentes</option>
            <option value="concluído">Concluídos</option>
            <option value="cancelado">Cancelados</option>
        </select>
    </div>

    <div class="row row-cols-1 g-4" id="orderCardsContainer">
        @if (pedidos != null && pedidos.Any())
        {
            @foreach (var pedido in pedidos)
            {
                <div class="col order-card-col" data-status="@(pedido.Status?.ToLower())">
                    <div class="card shadow-sm p-3 order-card" onclick="exibirDetalhesPedido({
                                pedidoNumero: '@Html.Raw(pedido.Pedido_ID)',
                                status: '@Html.Raw(pedido.Status)',
                                produtoImagemUrl: '@Html.Raw(pedido.Produto.ProdutoImagens)',
                                produtoNome: '@Html.Raw(pedido.Produto.Nome)',
                                produtoCategoria: '@Html.Raw(pedido.Produto.CategoriaProduto_ID)',
                                produtoQuantidade: @pedido.Produto.Quantidade,
                                usuarioNome: '@Html.Raw(pedido.Usuario.NomeCompleto)',
                                usuarioEmail: '@Html.Raw(pedido.Usuario.Email)',
                                usuarioTelefone: '@Html.Raw(pedido.Usuario.Telefone)',
                                instituicaoNome: '@Html.Raw(pedido.Instituicao?.Nome ?? string.Empty)',
                                instituicaoContato: '@Html.Raw(pedido.Instituicao?.Telefone ?? string.Empty)'
                            })">
                        <div class="d-flex flex-column flex-md-row align-items-center">
                            <div class="flex-shrink-0 me-md-4 mb-3 mb-md-0">
                                <img src="@pedido.Produto.ProdutoImagens" alt="Imagem do Produto"
                                     class="img-fluid rounded-3" style="max-height: 150px; max-width: 150px; object-fit: cover;" />
                            </div>

                            <div class="flex-grow-1 text-center text-md-start mb-3 mb-md-0">
                                <h3 class="h5 card-title mb-2 fw-bold text-primary">@pedido.Produto.Nome</h3>
                                <p class="card-text text-muted mb-1">
                                    <small><i class="fas fa-receipt me-1"></i> Pedido: #@pedido.Pedido_ID</small>
                                </p>
                                <p class="card-text text-muted mb-2">
                                    <small>
                                        <i class="fas fa-info-circle me-1"></i> Status:
                                        @{
                                            string statusClass = "";
                                            if (pedido.Status?.ToLower() == "concluído") { statusClass = "status-concluido"; }
                                            else if (pedido.Status?.ToLower() == "pendente") { statusClass = "status-pendente"; }
                                            else if (pedido.Status?.ToLower() == "cancelado") { statusClass = "status-cancelado"; }
                                            else { statusClass = "status-pendente"; } // Default or custom for other statuses
                                        }
                                        <span class="status-badge @statusClass">@pedido.Status</span>
                                    </small>
                                </p>
                                <p class="card-text text-muted mb-0">
                                    <small><i class="fas fa-user me-1"></i> Postado por: <span class="text-secondary fw-semibold">@pedido.Usuario.NomeCompleto</span></small>
                                </p>
                            </div>

                            <div class="d-flex flex-column align-items-center align-items-md-end text-md-end">
                                <p class="text-muted mb-1">
                                    <small><i class="fas fa-phone me-1"></i> Usuário: @pedido.Usuario.Telefone</small>
                                </p>
                                <p class="text-muted mb-1">
                                    <small><i class="fas fa-envelope me-1"></i> Usuário: @pedido.Usuario.Email</small>
                                </p>
                                @if (pedido.Instituicao != null && !string.IsNullOrEmpty(pedido.Instituicao.Nome))
                                {
                                    <p class="text-muted mb-0">
                                        <small><i class="fas fa-building me-1"></i> Instituição: @pedido.Instituicao.Nome</small>
                                    </p>
                                    <p class="text-muted mb-0">
                                        <small><i class="fas fa-phone me-1"></i> Contato Inst.: @pedido.Instituicao.Telefone</small>
                                    </p>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="col" id="noOrdersMessage">
                <div class="alert alert-info text-center" role="alert">
                    <i class="fas fa-box-open me-2"></i>Nenhum pedido encontrado para o status selecionado.
                </div>
            </div>
        }
    </div>
</section>

@* Renderiza a Partial View contendo o Modal e o JavaScript para exibirDetalhesPedido *@
@await Html.PartialAsync("Detalhes")


@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const filterDropdown = document.getElementById('orderStatusFilter');
            const orderCards = document.querySelectorAll('.order-card-col');
            const noOrdersMessage = document.getElementById('noOrdersMessage');
            const orderCardsContainer = document.getElementById('orderCardsContainer');

            function filterOrders() {
                const selectedStatus = filterDropdown.value.toLowerCase();
                let ordersFound = false;

                orderCards.forEach(card => {
                    const cardStatus = card.dataset.status;
                    if (selectedStatus === 'todos' || cardStatus === selectedStatus) {
                        card.style.display = ''; // Show the card
                        ordersFound = true;
                    } else {
                        card.style.display = 'none'; // Hide the card
                    }
                });

                // Show/hide the "No orders found" message
                if (noOrdersMessage) { // Check if the element exists
                    if (ordersFound) {
                        noOrdersMessage.style.display = 'none';
                    } else {
                        noOrdersMessage.style.display = '';
                        // Move "No orders found" message to the top if no orders are found,
                        // otherwise it might be hidden if it was inside a hidden .col
                        if (orderCardsContainer && !orderCardsContainer.contains(noOrdersMessage)) {
                            orderCardsContainer.appendChild(noOrdersMessage);
                        }
                    }
                }
            }

            // Set initial filter to "Ativos" on page load and apply it
            filterDropdown.value = 'ativo';
            filterOrders();

            // Add event listener for when the dropdown selection changes
            filterDropdown.addEventListener('change', filterOrders);
        });
    </script>
}