@model AjudeiMais.Ecommerce.Models.Instituicao.InstituicaoPerfilModel
@using AjudeiMais.Ecommerce.Tools

@{
    ViewBag.Title = "Meu Perfil"; // Changed to match user profile ViewBag.Title

    var instituicao = Model;
    var endereco = instituicao.Enderecos.FirstOrDefault();

    var userGuidLogado = User.FindFirst("GUID").Value;

    bool isMeuPerfil = userGuidLogado.ToString() == instituicao.GUID;

    ViewData["Title"] = isMeuPerfil
        ? "Meu Perfil - " + instituicao.Nome
        : instituicao.Nome + " - Perfil";
}

@section Styles {
    <link rel="stylesheet" href="~/css/usuario/usuario-perfil.css" asp-append-version="true" />
    <style>
        /* Variáveis de Cores (Exemplo - ajuste conforme sua paleta principal) */
        :root {
            --primary-color: #2a7e72; /* Tom principal para a marca */
            --secondary-color: #1a5e55; /* Tom secundário */
            --accent-color: #4CAF50; /* Cor de destaque para ações ou badges */
            --text-dark: #333;
            --text-light: #f8f9fa;
            --shadow-sm: 0 2px 4px rgba(0, 0, 0, 0.08);
            --shadow-md: 0 4px 10px rgba(0, 0, 0, 0.12);
            --shadow-lg: 0 8px 20px rgba(0, 0, 0, 0.16);
            --border-radius: 12px;
        }

        body {
            font-family: 'Segoe UI', 'Helvetica Neue', Arial, sans-serif;
            color: var(--text-dark);
            background-color: #f0f2f5; /* Fundo mais suave */
        }

        /* Hero Profile Section */
        .hero-profile.instituicao {
            background: linear-gradient(135deg, var(--primary-color) 0%, var(--secondary-color) 100%);
            color: var(--text-light);
            padding: 60px 0;
            border-bottom-left-radius: var(--border-radius);
            border-bottom-right-radius: var(--border-radius);
            box-shadow: var(--shadow-md);
            /* Transição para a própria seção, se houver alteração de estado */
            transition: background 0.5s ease;
        }

        .profile-avatar {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            overflow: hidden;
            border: 5px solid rgba(255, 255, 255, 0.3);
            box-shadow: var(--shadow-md);
            position: relative;
            background-color: #fff; /* Fundo para avatares vazios */
            transition: transform 0.3s ease; /* Transição para o avatar */
        }

            .profile-avatar img {
                width: 100%;
                height: 100%;
                object-fit: cover;
            }

        .verified-badge {
            position: absolute;
            bottom: 5px;
            right: 5px;
            background-color: var(--accent-color);
            color: white;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 0.9rem;
            border: 2px solid var(--primary-color);
            box-shadow: var(--shadow-sm);
            transition: transform 0.3s ease; /* Transição para o badge */
        }

        .profile-info h1 {
            font-size: 2.8rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
            color: var(--text-light);
            text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.2);
            /* Propriedades iniciais para a transição */
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.8s ease-out, transform 0.8s ease-out;
            transition-delay: 0.2s; /* Atraso específico para este elemento */
        }
        .profile-info h1.is-visible {
            opacity: 1;
            transform: translateY(0);
        }

        .profile-location,
        .profile-detail {
            font-size: 1.1rem;
            margin-bottom: 0.4rem;
            display: flex;
            align-items: center;
            color: rgba(255, 255, 255, 0.9);
            /* Propriedades iniciais para a transição */
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.8s ease-out, transform 0.8s ease-out;
        }

        /* Atrasos individuais para cada detalhe */
        .profile-location { transition-delay: 0.4s; }
        .profile-detail:nth-of-type(1) { transition-delay: 0.6s; }
        .profile-detail:nth-of-type(2) { transition-delay: 0.7s; }
        .profile-detail:nth-of-type(3) { transition-delay: 0.8s; }
        .profile-detail:nth-of-type(4) { transition-delay: 0.9s; }

        .profile-location.is-visible,
        .profile-detail.is-visible {
            opacity: 1;
            transform: translateY(0);
        }

        .rating-display {
            display: flex;
            align-items: center;
            margin-top: 15px;
            /* Propriedades iniciais para a transição */
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 0.8s ease-out, transform 0.8s ease-out;
            transition-delay: 1.0s;
        }
        .rating-display.is-visible {
            opacity: 1;
            transform: translateY(0);
        }

            .rating-display .stars .fas.fa-star,
            .rating-display .stars .fas.fa-star-half-alt {
                color: var(--color-warning, #FFD700); /* Amarelo dourado para estrelas */
                font-size: 1.3rem;
                margin-right: 2px;
            }

        .rating-display span {
            font-size: 1.1rem;
            margin-left: 5px;
        }

        .cta-button {
            background-color: var(--accent-color);
            color: white;
            border: none;
            border-radius: 30px;
            padding: 12px 25px;
            font-size: 1.1rem;
            font-weight: 600;
            margin-top: 25px;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            transition: background-color 0.3s ease, transform 0.2s ease, opacity 0.8s ease-out;
            box-shadow: var(--shadow-sm);
            /* Propriedades iniciais para a transição */
            opacity: 0;
            transform: translateY(20px);
            transition-delay: 1.2s;
        }

            .cta-button:hover {
                background-color: #45a049; /* Tom mais escuro no hover */
                transform: translateY(-2px);
                box-shadow: var(--shadow-md);
            }
            .cta-button.is-visible {
                opacity: 1;
                transform: translateY(0);
            }

            .cta-button i {
                margin-right: 8px;
            }

        /* Seções de Conteúdo */
        .container {
            padding-top: 30px;
            padding-bottom: 30px;
        }

        .section-header {
            text-align: center;
            margin-bottom: 40px;
            position: relative;
        }

            .section-header::after {
                content: '';
                display: block;
                width: 60px;
                height: 4px;
                background-color: var(--primary-color);
                margin: 15px auto 0;
                border-radius: 2px;
            }

        .section-title {
            font-size: 2.2rem;
            font-weight: 700;
            color: var(--text-dark);
            margin-bottom: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .section-title i {
                font-size: 1.8rem;
                color: var(--primary-color);
                margin-right: 15px;
            }

        .section-subtitle {
            font-size: 1.1rem;
            color: #666;
            max-width: 700px;
            margin: 0 auto;
            line-height: 1.6;
        }

        .description-section p {
            font-size: 1.05rem;
            line-height: 1.8;
            color: #555;
            text-align: justify;
            background-color: #fff;
            padding: 30px;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow-sm);
        }

        /* Galeria de Fotos */
        .gallery-section {
            margin-bottom: 50px;
        }

        .gallery-item {
            position: relative;
            overflow: hidden;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow-sm);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            cursor: pointer;
        }

            .gallery-item:hover {
                transform: translateY(-8px);
                box-shadow: var(--shadow-lg);
            }

            .gallery-item img {
                width: 100%;
                height: 220px; /* Altura ligeiramente maior para destaque */
                object-fit: cover;
                display: block;
                border-radius: var(--border-radius);
                transition: transform 0.4s ease;
            }

            .gallery-item:hover img {
                transform: scale(1.08); /* Efeito de zoom mais pronunciado */
            }

        .gallery-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5); /* Overlay mais escuro */
            display: flex;
            align-items: center;
            justify-content: center;
            opacity: 0;
            transition: opacity 0.3s ease;
            border-radius: var(--border-radius);
        }

            .gallery-item:hover .gallery-overlay {
                opacity: 1;
            }

            .gallery-overlay .icon {
                color: white;
                font-size: 2.5rem; /* Ícone maior */
                text-shadow: 1px 1px 5px rgba(0, 0, 0, 0.3);
            }

        /* Animações e Interatividade baseadas em classes */
        .slide-up {
            opacity: 0;
            transform: translateY(30px);
            transition: opacity 0.6s ease-out, transform 0.6s ease-out;
        }

        .slide-up.is-visible {
            opacity: 1;
            transform: translateY(0);
        }

        .interactive-element {
            transition: transform 0.2s ease;
        }

            .interactive-element:active {
                transform: scale(0.98);
            }
    </style>
}

@{
    await Html.RenderPartialAsync("_Alertas");
}

<section class="hero-profile instituicao">
    <div class="container py-5">
        <div class="row align-items-center">
            <div class="col-md-auto text-center mb-4 mb-md-0">
                <div class="profile-avatar mx-auto">
                    <img src="@Assistant.ServerURL()@instituicao.FotoPerfil" alt="@instituicao.Nome">
                    <div class="verified-badge">
                        <i class="fas fa-check fa-sm"></i>
                    </div>
                </div>
            </div>

            <div class="col-md">
                <div class="profile-info">
                    <h1 class="fade-in">@instituicao.Nome</h1>
                    <div class="profile-location fade-in">
                        <i class="fas fa-map-marker-alt me-2"></i>
                        @endereco?.Cidade, @endereco?.Estado
                    </div>

                    <p class="profile-detail fade-in">
                        <i class="fas fa-road me-2"></i>
                        <strong>Endereço:</strong> @endereco?.Rua, @endereco?.Numero
                    </p>
                    <p class="profile-detail fade-in">
                        <i class="fas fa-tag me-2"></i>
                        <strong>Categoria:</strong> Assistência Social
                    </p>
                    <p class="profile-detail fade-in">
                        <i class="fas fa-envelope me-2"></i>
                        <strong>E-mail:</strong> @instituicao.Email
                    </p>
                    <p class="profile-detail fade-in">
                        <i class="fas fa-phone me-2"></i>
                        <strong>Telefone:</strong> @instituicao.Telefone
                    </p>

                    <div class="rating-display fade-in">
                        <div class="stars">
                            <i class="fas fa-star star"></i>
                            <i class="fas fa-star star"></i>
                            <i class="fas fa-star star"></i>
                            <i class="fas fa-star star"></i>
                            <i class="fas fa-star-half-alt star"></i>
                        </div>
                        <span class="text-white fw-bold">4.8 de 5</span>
                        <span class="text-white-50 ms-2">(150 avaliações)</span> @* Valor mockado para exemplo *@
                    </div>

                    @if (!isMeuPerfil)
                    {
                        <button class="cta-button interactive-element" onclick="toggleChat()">
                            <i class="fas fa-comment-dots me-2"></i>
                            Iniciar Conversa
                        </button>
                    }
                </div>
            </div>
        </div>
    </div>
</section>

<div class="container">
    ---
    <section class="description-section slide-up">
        <div class="section-header">
            <h2 class="section-title">
                <i class="fas fa-info-circle me-3 text-primary"></i>
                Sobre a @instituicao.Nome
            </h2>
            <p class="section-subtitle">
                Conheça um pouco mais sobre a nossa missão e os impactos que geramos.
            </p>
        </div>
        <p class="text-muted text-justify">
            @instituicao.Descricao
        </p>
    </section>

    ---
    <section class="gallery-section slide-up">
        <div class="section-header">
            <h2 class="section-title">
                <i class="fas fa-images me-3 text-info"></i>
                Nossa Galeria
            </h2>
            <p class="section-subtitle">
                Momentos e ações que fazem a diferença na nossa comunidade.
            </p>
        </div>

        @if (instituicao.FotosUrl != null && instituicao.FotosUrl.Any())
        {
            <div class="row g-4 mb-5">
                @foreach (var foto in instituicao.FotosUrl)
                {
                    <div class="col-lg-3 col-md-4 col-sm-6">
                        <a href="@(Assistant.ServerURL() + foto.CaminhoImagem)" data-lightbox="gallery" data-title="Galeria de Fotos da @instituicao.Nome">
                            <div class="gallery-item interactive-element">
                                <img src="@(Assistant.ServerURL() + foto.CaminhoImagem)" alt="Foto da Galeria">
                                <div class="gallery-overlay">
                                    <i class="fas fa-search-plus icon"></i>
                                </div>
                            </div>
                        </a>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-camera fa-4x text-muted mb-3"></i>
                <h3 class="text-muted">Nenhuma foto disponível na galeria.</h3>
                <p class="text-muted">Em breve, novas imagens serão adicionadas aqui!</p>
            </div>
        }
    </section>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.11.3/js/lightbox.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/lightbox2/2.11.3/css/lightbox.min.css" rel="stylesheet" />
    <script>
        // Configuração do Lightbox
        lightbox.option({
            'resizeDuration': 200,
            'wrapAround': true
        });

        // Inicialização de tooltips (mantido do perfil de usuário)
        const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        const tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });

        // Animação de entrada dos elementos (com Intersection Observer)
        const observerOptions = {
            threshold: 0.1,
            rootMargin: '0px 0px -50px 0px'
        };

        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('is-visible');
                    // Desobservar após a primeira aparição para evitar re-animações (opcional)
                    // observer.unobserve(entry.target);
                } else {
                    // Opcional: remover a classe para re-animar se sair e entrar na viewport
                    // entry.target.classList.remove('is-visible');
                }
            });
        }, observerOptions);

        // Observar elementos com 'slide-up' (para as seções) e 'fade-in' (para os detalhes do hero)
        document.querySelectorAll('.slide-up, .fade-in').forEach(el => {
            observer.observe(el);
        });


        // Animação de clique nos botões interativos
        document.querySelectorAll('.interactive-element').forEach(element => {
            element.addEventListener('mousedown', function () {
                this.style.transform = 'scale(0.98)';
            });

            element.addEventListener('mouseup', function () {
                this.style.transform = 'scale(1)';
            });

            element.addEventListener('mouseleave', function () {
                this.style.transform = 'scale(1)';
            });
        });

        // Função para alternar o chat (mantida, mas com a estilização do novo layout)
        function toggleChat() {
            const chat = document.getElementById('chatBox'); // Supondo que você tenha um elemento com ID 'chatBox'
            if (chat) {
                chat.classList.toggle('d-none');
                if (!chat.classList.contains('d-none')) {
                    chat.style.opacity = '0';
                    chat.style.transform = 'translateY(30px)';
                    setTimeout(() => {
                        chat.style.opacity = '1';
                        chat.style.transform = 'translateY(0)';
                    }, 50);
                }
            } else {
                console.warn("Elemento 'chatBox' não encontrado. Certifique-se de que ele existe no seu HTML.");
                // Aqui você pode adicionar uma lógica alternativa, como redirecionar para uma página de chat
            }
        }
    </script>
}