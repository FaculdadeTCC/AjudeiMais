@model AjudeiMais.Ecommerce.Models.Home.HomeModel
@using AjudeiMais.Ecommerce.Tools

@{
    ViewData["Title"] = "Doe com Amor e Encontre Solidariedade";
    ViewData["MetaDescription"] = "Conecte-se com pessoas que precisam. No AjudeiMais, você doa ou recebe roupas, calçados, móveis e muito mais. Faça o bem e transforme vidas com um clique.";
}

@section Styles {
    <link rel="stylesheet" href="~/css/home/banner.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/home/explore.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/home/donate.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/home/categories.css" asp-append-version="true" />
}

@{
    await Html.RenderPartialAsync("_Alertas");
}

<div class="container-fluid" style="padding: 0">
    <!-- Hero Section -->
    <section class="hero d-flex align-items-center text-white text-center">
        <div class="hero-content container">
            <h1 class="hero-title">
                Conecte-se com causas que importam<br>
                e transforme vidas com sua doação
            </h1>
            <p class="hero-subtitle mx-auto">
                O Ajudei+ é uma plataforma onde usuários podem doar para instituições de forma simples, segura e
                transparente.
                Escolha uma causa, faça a sua doação e ajude a fazer a diferença na comunidade.
            </p>
            <!-- Hero CTAs -->

        </div>
    </section>

    <section id="anuncio" class="py-5 bg-light">
        <div class="container">
            <h2 class="text-center mb-4">Produtos Próximos de Você</h2>

            @if (Model.Anuncios != null && Model.Anuncios.Any())
            {
                <div class="row">
                    @foreach (var produto in Model.Anuncios)
                    {
                        <div class="col-md-4 mb-4">
                            <div class="card h-100 shadow-sm">
                                @if (produto.ProdutoImagens != null && produto.ProdutoImagens.Any())
                                {
                                    var imagemPrincipal = produto.ProdutoImagens?
                                    .FirstOrDefault(pi => pi.IsPrincipal == true && pi.Excluido != true)
                                    ?? produto.ProdutoImagens?.FirstOrDefault(pi => pi.Excluido != true);

                                    var imageUrl = imagemPrincipal != null
                                    ? Assistant.ServerURL() + imagemPrincipal.Imagem
                                    : null;

                                    <img src="@imageUrl" class="card-img-top" alt="Imagem do produto" style="object-fit: cover; height: 200px;">
                                }
                                else
                                {
                                    <img src="~/images/no-image.png" class="card-img-top" alt="Sem imagem" style="object-fit: cover; height: 200px;">
                                }

                                <div class="card-body d-flex flex-column">
                                    <h5 class="card-title">@produto.Nome</h5>
                                    <p class="card-text text-muted">@Html.Raw(produto.Descricao?.Substring(0, Math.Min(produto.Descricao.Length, 80)))...</p>
                                    <p class="card-text"><small class="text-muted">Categoria: @produto.CategoriaProduto?.Nome</small></p>

                                    <div class="mt-auto">
                                        <a href="@Url.RouteUrl("anuncio-detalhe", new { guid = produto.Guid })" class="btn btn-primary w-100">
                                            Ver detalhes
                                        </a>

                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="text-center text-muted">
                    <p>Não há produtos próximos disponíveis no momento.</p>
                </div>
            }
        </div>
    </section>
</div>

<script>
    document.addEventListener('DOMContentLoaded', async () => {
      // Navbar + Banner Observer
      const navbar = document.querySelector('.navbar');
      const banner = document.querySelector('.hero');
      if (navbar && banner) {
        const observer = new IntersectionObserver(
          ([entry]) => {
            if (entry.isIntersecting) {
              navbar.classList.remove('scrolled');
            } else {
              navbar.classList.add('scrolled');
            }
          },
          {
            rootMargin: `-${navbar.offsetHeight}px 0px 0px 0px`,
            threshold: 0
          }
        );
        observer.observe(banner);
      }
    });
</script>



